

.subckt SW_INPUT_SUB in_l in_r out sw_ctrl vdd vss
m2 out on_r in_r vss nch l=60e-9 w='sw_width*fxxx' m=1 nf=fxxx sd=200e-9 ad='((fxxx-int(fxxx/2)*2)*((175e-9+((fxxx-1)*200e-9)/2)+0)+((fxxx+1)-int((fxxx+1)/2)*2)*((fxxx/2)*200e-9))*sw_width' as='((fxxx-int(fxxx/2)*2)*((175e-9+((fxxx-1)*200e-9)/2)+0)+((fxxx+1)-int((fxxx+1)/2)*2)*(((350e-9+(fxxx/2-1)*200e-9)+0)+0))*sw_width' pd='(fxxx-int(fxxx/2)*2)*(((175e-9+((fxxx-1)*200e-9)/2)+0)*2+(fxxx+1)*sw_width)+((fxxx+1)-int((fxxx+1)/2)*2)*(((fxxx/2)*200e-9)*2+fxxx*sw_width)' ps='(fxxx-int(fxxx/2)*2)*(((175e-9+((fxxx-1)*200e-9)/2)+0)*2+(fxxx+1)*sw_width)+((fxxx+1)-int((fxxx+1)/2)*2)*((((350e-9+(fxxx/2-1)*200e-9)+0)+0)*2+(fxxx+2)*sw_width)' nrd='(fxxx-int(fxxx/2)*2)*((10e-15/(100e-9+100e-9*(fxxx-1)))/sw_width)+((fxxx+1)-int((fxxx+1)/2)*2)*((100e-9/fxxx)/sw_width)' nrs='(fxxx-int(fxxx/2)*2)*((10e-15/(100e-9+100e-9*(fxxx-1)))/sw_width)+((fxxx+1)-int((fxxx+1)/2)*2)*((1e-21/(10e-15*(fxxx-2)+20e-15))/sw_width)' sa=175e-9 sb=175e-9 sca=0 scb=0 scc=0
m0 out on_l in_l vss nch l=60e-9 w='sw_width*fxxx' m=1 nf=fxxx sd=200e-9 ad='((fxxx-int(fxxx/2)*2)*((175e-9+((fxxx-1)*200e-9)/2)+0)+((fxxx+1)-int((fxxx+1)/2)*2)*((fxxx/2)*200e-9))*sw_width' as='((fxxx-int(fxxx/2)*2)*((175e-9+((fxxx-1)*200e-9)/2)+0)+((fxxx+1)-int((fxxx+1)/2)*2)*(((350e-9+(fxxx/2-1)*200e-9)+0)+0))*sw_width' pd='(fxxx-int(fxxx/2)*2)*(((175e-9+((fxxx-1)*200e-9)/2)+0)*2+(fxxx+1)*sw_width)+((fxxx+1)-int((fxxx+1)/2)*2)*(((fxxx/2)*200e-9)*2+fxxx*sw_width)' ps='(fxxx-int(fxxx/2)*2)*(((175e-9+((fxxx-1)*200e-9)/2)+0)*2+(fxxx+1)*sw_width)+((fxxx+1)-int((fxxx+1)/2)*2)*((((350e-9+(fxxx/2-1)*200e-9)+0)+0)*2+(fxxx+2)*sw_width)' nrd='(fxxx-int(fxxx/2)*2)*((10e-15/(100e-9+100e-9*(fxxx-1)))/sw_width)+((fxxx+1)-int((fxxx+1)/2)*2)*((100e-9/fxxx)/sw_width)' nrs='(fxxx-int(fxxx/2)*2)*((10e-15/(100e-9+100e-9*(fxxx-1)))/sw_width)+((fxxx+1)-int((fxxx+1)/2)*2)*((1e-21/(10e-15*(fxxx-2)+20e-15))/sw_width)' sa=175e-9 sb=175e-9 sca=0 scb=0 scc=0
m3 in_r on_l out vdd pch l=60e-9 w='sw_width*fxxx' m=1 nf=fxxx sd=200e-9 ad='((fxxx-int(fxxx/2)*2)*((175e-9+((fxxx-1)*200e-9)/2)+0)+((fxxx+1)-int((fxxx+1)/2)*2)*((fxxx/2)*200e-9))*sw_width' as='((fxxx-int(fxxx/2)*2)*((175e-9+((fxxx-1)*200e-9)/2)+0)+((fxxx+1)-int((fxxx+1)/2)*2)*(((350e-9+(fxxx/2-1)*200e-9)+0)+0))*sw_width' pd='(fxxx-int(fxxx/2)*2)*(((175e-9+((fxxx-1)*200e-9)/2)+0)*2+(fxxx+1)*sw_width)+((fxxx+1)-int((fxxx+1)/2)*2)*(((fxxx/2)*200e-9)*2+fxxx*sw_width)' ps='(fxxx-int(fxxx/2)*2)*(((175e-9+((fxxx-1)*200e-9)/2)+0)*2+(fxxx+1)*sw_width)+((fxxx+1)-int((fxxx+1)/2)*2)*((((350e-9+(fxxx/2-1)*200e-9)+0)+0)*2+(fxxx+2)*sw_width)' nrd='(fxxx-int(fxxx/2)*2)*((10e-15/(100e-9+100e-9*(fxxx-1)))/sw_width)+((fxxx+1)-int((fxxx+1)/2)*2)*((100e-9/fxxx)/sw_width)' nrs='(fxxx-int(fxxx/2)*2)*((10e-15/(100e-9+100e-9*(fxxx-1)))/sw_width)+((fxxx+1)-int((fxxx+1)/2)*2)*((1e-21/(10e-15*(fxxx-2)+20e-15))/sw_width)' sa=175e-9 sb=175e-9 sca=0 scb=0 scc=0
m1 in_l on_r out vdd pch l=60e-9 w='sw_width*fxxx' m=1 nf=fxxx sd=200e-9 ad='((fxxx-int(fxxx/2)*2)*((175e-9+((fxxx-1)*200e-9)/2)+0)+((fxxx+1)-int((fxxx+1)/2)*2)*((fxxx/2)*200e-9))*sw_width' as='((fxxx-int(fxxx/2)*2)*((175e-9+((fxxx-1)*200e-9)/2)+0)+((fxxx+1)-int((fxxx+1)/2)*2)*(((350e-9+(fxxx/2-1)*200e-9)+0)+0))*sw_width' pd='(fxxx-int(fxxx/2)*2)*(((175e-9+((fxxx-1)*200e-9)/2)+0)*2+(fxxx+1)*sw_width)+((fxxx+1)-int((fxxx+1)/2)*2)*(((fxxx/2)*200e-9)*2+fxxx*sw_width)' ps='(fxxx-int(fxxx/2)*2)*(((175e-9+((fxxx-1)*200e-9)/2)+0)*2+(fxxx+1)*sw_width)+((fxxx+1)-int((fxxx+1)/2)*2)*((((350e-9+(fxxx/2-1)*200e-9)+0)+0)*2+(fxxx+2)*sw_width)' nrd='(fxxx-int(fxxx/2)*2)*((10e-15/(100e-9+100e-9*(fxxx-1)))/sw_width)+((fxxx+1)-int((fxxx+1)/2)*2)*((100e-9/fxxx)/sw_width)' nrs='(fxxx-int(fxxx/2)*2)*((10e-15/(100e-9+100e-9*(fxxx-1)))/sw_width)+((fxxx+1)-int((fxxx+1)/2)*2)*((1e-21/(10e-15*(fxxx-2)+20e-15))/sw_width)' sa=175e-9 sb=175e-9 sca=0 scb=0 scc=0
xi1 on_r vdd vdd vss vss on_l INV_X2B_A9TR
xi0 on_l vdd vdd vss vss sw_ctrl INV_X2B_A9TR
.ends SW_INPUT_SUB


.subckt SW_INPUT in0l in0r in1 out sw0 sw1 vdd vss
xi4 net1 net2 out sw1 vdd vss SW_INPUT_SUB
xi3 in0l in0r net2 sw0 vdd vss SW_INPUT_SUB
xi2 in1 vss net1 vss vdd vss SW_INPUT_SUB
.ends SW_INPUT


.subckt SW_VCM in out sw_ctrl vdd vss
xi1 on vdd vdd vss vss onb INV_X2B_A9TR
xi0 onb vdd vdd vss vss sw_ctrl INV_X2B_A9TR
m2 out on in vss nch_25 l=280e-9 w='sw_width_vcm*fxxx_vcm' m=1 nf=fxxx_vcm sd=310e-9 ad='((fxxx_vcm-int(fxxx_vcm/2)*2)*((230e-9+((fxxx_vcm-1)*310e-9)/2)+0)+((fxxx_vcm+1)-int((fxxx_vcm+1)/2)*2)*((fxxx_vcm/2)*310e-9))*sw_width_vcm' as='((fxxx_vcm-int(fxxx_vcm/2)*2)*((230e-9+((fxxx_vcm-1)*310e-9)/2)+0)+((fxxx_vcm+1)-int((fxxx_vcm+1)/2)*2)*(((460e-9+(fxxx_vcm/2-1)*310e-9)+0)+0))*sw_width_vcm' pd='(fxxx_vcm-int(fxxx_vcm/2)*2)*(((230e-9+((fxxx_vcm-1)*310e-9)/2)+0)*2+(fxxx_vcm+1)*sw_width_vcm)+((fxxx_vcm+1)-int((fxxx_vcm+1)/2)*2)*(((fxxx_vcm/2)*310e-9)*2+fxxx_vcm*sw_width_vcm)' ps='(fxxx_vcm-int(fxxx_vcm/2)*2)*(((230e-9+((fxxx_vcm-1)*310e-9)/2)+0)*2+(fxxx_vcm+1)*sw_width_vcm)+((fxxx_vcm+1)-int((fxxx_vcm+1)/2)*2)*((((460e-9+(fxxx_vcm/2-1)*310e-9)+0)+0)*2+(fxxx_vcm+2)*sw_width_vcm)' nrd='(fxxx_vcm-int(fxxx_vcm/2)*2)*((24.025e-15/(155e-9+155e-9*(fxxx_vcm-1)))/sw_width_vcm)+((fxxx_vcm+1)-int((fxxx_vcm+1)/2)*2)*((155e-9/fxxx_vcm)/sw_width_vcm)'
+nrs='(fxxx_vcm-int(fxxx_vcm/2)*2)*((24.025e-15/(155e-9+155e-9*(fxxx_vcm-1)))/sw_width_vcm)+((fxxx_vcm+1)-int((fxxx_vcm+1)/2)*2)*((3.723875e-21/(24.025e-15*(fxxx_vcm-2)+48.05e-15))/sw_width_vcm)' sa=230e-9 sb=230e-9 sca=0 scb=0 scc=0
m3 in onb out vdd pch_25 l=280e-9 w='sw_width_vcm*fxxx_vcm' m=1 nf=fxxx_vcm sd=310e-9 ad='((fxxx_vcm-int(fxxx_vcm/2)*2)*((230e-9+((fxxx_vcm-1)*310e-9)/2)+0)+((fxxx_vcm+1)-int((fxxx_vcm+1)/2)*2)*((fxxx_vcm/2)*310e-9))*sw_width_vcm' as='((fxxx_vcm-int(fxxx_vcm/2)*2)*((230e-9+((fxxx_vcm-1)*310e-9)/2)+0)+((fxxx_vcm+1)-int((fxxx_vcm+1)/2)*2)*(((460e-9+(fxxx_vcm/2-1)*310e-9)+0)+0))*sw_width_vcm' pd='(fxxx_vcm-int(fxxx_vcm/2)*2)*(((230e-9+((fxxx_vcm-1)*310e-9)/2)+0)*2+(fxxx_vcm+1)*sw_width_vcm)+((fxxx_vcm+1)-int((fxxx_vcm+1)/2)*2)*(((fxxx_vcm/2)*310e-9)*2+fxxx_vcm*sw_width_vcm)' ps='(fxxx_vcm-int(fxxx_vcm/2)*2)*(((230e-9+((fxxx_vcm-1)*310e-9)/2)+0)*2+(fxxx_vcm+1)*sw_width_vcm)+((fxxx_vcm+1)-int((fxxx_vcm+1)/2)*2)*((((460e-9+(fxxx_vcm/2-1)*310e-9)+0)+0)*2+(fxxx_vcm+2)*sw_width_vcm)' nrd='(fxxx_vcm-int(fxxx_vcm/2)*2)*((24.025e-15/(155e-9+155e-9*(fxxx_vcm-1)))/sw_width_vcm)+((fxxx_vcm+1)-int((fxxx_vcm+1)/2)*2)*((155e-9/fxxx_vcm)/sw_width_vcm)'
+nrs='(fxxx_vcm-int(fxxx_vcm/2)*2)*((24.025e-15/(155e-9+155e-9*(fxxx_vcm-1)))/sw_width_vcm)+((fxxx_vcm+1)-int((fxxx_vcm+1)/2)*2)*((3.723875e-21/(24.025e-15*(fxxx_vcm-2)+48.05e-15))/sw_width_vcm)' sa=230e-9 sb=230e-9 sca=0 scb=0 scc=0
.ends SW_VCM


.subckt cdac 
+ vcm_p vcm_n vin_p vin_n vrefh vrefl vtop_p vtop_n sample 
+ @value
+ vdd vss

*bit0 @in xsw_in_p0@ vrefh vin_p vrefl vbot_p<0> sample value<0> vdd vss SW_INPUT
*bit1 @in xsw_in_p1@ vrefh vin_p vrefl vbot_p<1> sample value<1> vdd vss SW_INPUT
*bit2 @in xsw_in_p2@ vrefh vin_p vrefl vbot_p<2> sample value<2> vdd vss SW_INPUT
*bit3 @in xsw_in_p3@ vrefh vin_p vrefl vbot_p<3> sample value<3> vdd vss SW_INPUT
*bit4 @in xsw_in_p4@ vrefh vin_p vrefl vbot_p<4> sample value<4> vdd vss SW_INPUT
*bit5 @in xsw_in_p5@ vrefh vin_p vrefl vbot_p<5> sample value<5> vdd vss SW_INPUT
*bit6 @in xsw_in_p6@ vrefh vin_p vrefl vbot_p<6> sample value<6> vdd vss SW_INPUT
*bit7 @in xsw_in_p7@ vrefh vin_p vrefl vbot_p<7> sample value<7> vdd vss SW_INPUT

*bit0 @in xsw_in_n0@ vrefl vin_n vrefh vbot_n<0> sample value<0> vdd vss SW_INPUT
*bit1 @in xsw_in_n1@ vrefl vin_n vrefh vbot_n<1> sample value<1> vdd vss SW_INPUT
*bit2 @in xsw_in_n2@ vrefl vin_n vrefh vbot_n<2> sample value<2> vdd vss SW_INPUT
*bit3 @in xsw_in_n3@ vrefl vin_n vrefh vbot_n<3> sample value<3> vdd vss SW_INPUT
*bit4 @in xsw_in_n4@ vrefl vin_n vrefh vbot_n<4> sample value<4> vdd vss SW_INPUT
*bit5 @in xsw_in_n5@ vrefl vin_n vrefh vbot_n<5> sample value<5> vdd vss SW_INPUT
*bit6 @in xsw_in_n6@ vrefl vin_n vrefh vbot_n<6> sample value<6> vdd vss SW_INPUT
*bit7 @in xsw_in_n7@ vrefl vin_n vrefh vbot_n<7> sample value<7> vdd vss SW_INPUT


*bit0 @cv c_cdac_p0@ vtop_p vbot_p<0> '1*cap_val'
*bit1 @cv c_cdac_p1@ vtop_p vbot_p<1> '2*cap_val'
*bit2 @cv c_cdac_p2@ vtop_p vbot_p<2> '4*cap_val'
*bit3 @cv c_cdac_p3@ vtop_p vbot_p<3> '8*cap_val'
*bit4 @cv c_cdac_p4@ vtop_p vbot_p<4> '16*cap_val'
*bit5 @cv c_cdac_p5@ vtop_p vbot_p<5> '32*cap_val'
*bit6 @cv c_cdac_p6@ vtop_p vbot_p<6> '64*cap_val'
*bit7 @cv c_cdac_p7@ vtop_p vbot_p<7> '128*cap_val'

*bit0 @cv c_cdac_n0@ vtop_n vbot_n<0> '1*cap_val'
*bit1 @cv c_cdac_n1@ vtop_n vbot_n<1> '2*cap_val'
*bit2 @cv c_cdac_n2@ vtop_n vbot_n<2> '4*cap_val'
*bit3 @cv c_cdac_n3@ vtop_n vbot_n<3> '8*cap_val'
*bit4 @cv c_cdac_n4@ vtop_n vbot_n<4> '16*cap_val'
*bit5 @cv c_cdac_n5@ vtop_n vbot_n<5> '32*cap_val'
*bit6 @cv c_cdac_n6@ vtop_n vbot_n<6> '64*cap_val'
*bit7 @cv c_cdac_n7@ vtop_n vbot_n<7> '128*cap_val'

@cm xsw_vcmp@ vcm_p vtop_p sample vdd vss SW_VCM
@cm xsw_vcmn@ vcm_n vtop_n sample vdd vss SW_VCM

@cv x_inv_cm_up_p@ cm_up_p vdd vdd vss vss sample INV_X2B_A9TR
@cv x_inv_cm_up_n@ cm_up_n vdd vdd vss vss sample INV_X2B_A9TR

*bit0 @cv c_cm_up_p0@ vtop_p cm_up_p '1*cap_val'
*bit1 @cv c_cm_up_p1@ vtop_p cm_up_p '1*cap_val'
*bit2 @cv c_cm_up_p2@ vtop_p cm_up_p '1*cap_val'
*bit3 @cv c_cm_up_p3@ vtop_p cm_up_p '2*cap_val'
*bit4 @cv c_cm_up_p4@ vtop_p cm_up_p '4*cap_val'
*bit5 @cv c_cm_up_p5@ vtop_p cm_up_p '8*cap_val'
*bit6 @cv c_cm_up_p6@ vtop_p cm_up_p '16*cap_val'
*bit7 @cv c_cm_up_p7@ vtop_p cm_up_p '32*cap_val'

*bit0 @cv c_cm_up_n0@ vtop_n cm_up_n '1*cap_val'
*bit1 @cv c_cm_up_n1@ vtop_n cm_up_n '1*cap_val'
*bit2 @cv c_cm_up_n2@ vtop_n cm_up_n '1*cap_val'
*bit3 @cv c_cm_up_n3@ vtop_n cm_up_n '2*cap_val'
*bit4 @cv c_cm_up_n4@ vtop_n cm_up_n '4*cap_val'
*bit5 @cv c_cm_up_n5@ vtop_n cm_up_n '8*cap_val'
*bit6 @cv c_cm_up_n6@ vtop_n cm_up_n '16*cap_val'
*bit7 @cv c_cm_up_n7@ vtop_n cm_up_n '32*cap_val'

.ends cdac
